#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagementSystem.UI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HMS")]
	public partial class hmsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountant_(Accountant_ instance);
    partial void UpdateAccountant_(Accountant_ instance);
    partial void DeleteAccountant_(Accountant_ instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDoctor_(Doctor_ instance);
    partial void UpdateDoctor_(Doctor_ instance);
    partial void DeleteDoctor_(Doctor_ instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertLogin_(Login_ instance);
    partial void UpdateLogin_(Login_ instance);
    partial void DeleteLogin_(Login_ instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertReceptionist_(Receptionist_ instance);
    partial void UpdateReceptionist_(Receptionist_ instance);
    partial void DeleteReceptionist_(Receptionist_ instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertSalary_(Salary_ instance);
    partial void UpdateSalary_(Salary_ instance);
    partial void DeleteSalary_(Salary_ instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    #endregion
		
		public hmsDataContext() : 
				base(global::HospitalManagementSystem.UI.Properties.Settings.Default.HMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Accountant_> Accountant_s
		{
			get
			{
				return this.GetTable<Accountant_>();
			}
		}
		
		public System.Data.Linq.Table<Admin_> Admin_s
		{
			get
			{
				return this.GetTable<Admin_>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Doctor_> Doctor_s
		{
			get
			{
				return this.GetTable<Doctor_>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Login_> Login_s
		{
			get
			{
				return this.GetTable<Login_>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<Receptionist_> Receptionist_s
		{
			get
			{
				return this.GetTable<Receptionist_>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Salary_> Salary_s
		{
			get
			{
				return this.GetTable<Salary_>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accountant")]
	public partial class Accountant_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountantId;
		
		private string _AccountantName;
		
		private string _AccountantAddress;
		
		private string _AccountantPhone;
		
		private string _AccountantSalary;
		
		private string _AccountantProfile;
		
		private string _AccountantUsername;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountantIdChanging(int value);
    partial void OnAccountantIdChanged();
    partial void OnAccountantNameChanging(string value);
    partial void OnAccountantNameChanged();
    partial void OnAccountantAddressChanging(string value);
    partial void OnAccountantAddressChanged();
    partial void OnAccountantPhoneChanging(string value);
    partial void OnAccountantPhoneChanged();
    partial void OnAccountantSalaryChanging(string value);
    partial void OnAccountantSalaryChanged();
    partial void OnAccountantProfileChanging(string value);
    partial void OnAccountantProfileChanged();
    partial void OnAccountantUsernameChanging(string value);
    partial void OnAccountantUsernameChanged();
    #endregion
		
		public Accountant_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountantId
		{
			get
			{
				return this._AccountantId;
			}
			set
			{
				if ((this._AccountantId != value))
				{
					this.OnAccountantIdChanging(value);
					this.SendPropertyChanging();
					this._AccountantId = value;
					this.SendPropertyChanged("AccountantId");
					this.OnAccountantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantName
		{
			get
			{
				return this._AccountantName;
			}
			set
			{
				if ((this._AccountantName != value))
				{
					this.OnAccountantNameChanging(value);
					this.SendPropertyChanging();
					this._AccountantName = value;
					this.SendPropertyChanged("AccountantName");
					this.OnAccountantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantAddress
		{
			get
			{
				return this._AccountantAddress;
			}
			set
			{
				if ((this._AccountantAddress != value))
				{
					this.OnAccountantAddressChanging(value);
					this.SendPropertyChanging();
					this._AccountantAddress = value;
					this.SendPropertyChanged("AccountantAddress");
					this.OnAccountantAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantPhone
		{
			get
			{
				return this._AccountantPhone;
			}
			set
			{
				if ((this._AccountantPhone != value))
				{
					this.OnAccountantPhoneChanging(value);
					this.SendPropertyChanging();
					this._AccountantPhone = value;
					this.SendPropertyChanged("AccountantPhone");
					this.OnAccountantPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantSalary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantSalary
		{
			get
			{
				return this._AccountantSalary;
			}
			set
			{
				if ((this._AccountantSalary != value))
				{
					this.OnAccountantSalaryChanging(value);
					this.SendPropertyChanging();
					this._AccountantSalary = value;
					this.SendPropertyChanged("AccountantSalary");
					this.OnAccountantSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantProfile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantProfile
		{
			get
			{
				return this._AccountantProfile;
			}
			set
			{
				if ((this._AccountantProfile != value))
				{
					this.OnAccountantProfileChanging(value);
					this.SendPropertyChanging();
					this._AccountantProfile = value;
					this.SendPropertyChanged("AccountantProfile");
					this.OnAccountantProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountantUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountantUsername
		{
			get
			{
				return this._AccountantUsername;
			}
			set
			{
				if ((this._AccountantUsername != value))
				{
					this.OnAccountantUsernameChanging(value);
					this.SendPropertyChanging();
					this._AccountantUsername = value;
					this.SendPropertyChanged("AccountantUsername");
					this.OnAccountantUsernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin_
	{
		
		private string _AdminName;
		
		private string _AdminAddress;
		
		private string _AdminPhone;
		
		private string _AdminUsername;
		
		public Admin_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this._AdminName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminAddress
		{
			get
			{
				return this._AdminAddress;
			}
			set
			{
				if ((this._AdminAddress != value))
				{
					this._AdminAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminPhone
		{
			get
			{
				return this._AdminPhone;
			}
			set
			{
				if ((this._AdminPhone != value))
				{
					this._AdminPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminUsername
		{
			get
			{
				return this._AdminUsername;
			}
			set
			{
				if ((this._AdminUsername != value))
				{
					this._AdminUsername = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentName;
		
		private string _DepartmentDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDepartmentDescriptionChanging(string value);
    partial void OnDepartmentDescriptionChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDescription", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DepartmentDescription
		{
			get
			{
				return this._DepartmentDescription;
			}
			set
			{
				if ((this._DepartmentDescription != value))
				{
					this.OnDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DepartmentDescription = value;
					this.SendPropertyChanged("DepartmentDescription");
					this.OnDepartmentDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DoctorId;
		
		private string _DoctorName;
		
		private string _DoctorEmail;
		
		private string _DoctorAddress;
		
		private string _DoctorPhone;
		
		private string _DoctorDepartmentName;
		
		private string _DoctorGender;
		
		private string _DoctorAge;
		
		private string _DoctorSalary;
		
		private string _DoctorProfile;
		
		private string _DoctorUsername;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIdChanging(int value);
    partial void OnDoctorIdChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnDoctorEmailChanging(string value);
    partial void OnDoctorEmailChanged();
    partial void OnDoctorAddressChanging(string value);
    partial void OnDoctorAddressChanged();
    partial void OnDoctorPhoneChanging(string value);
    partial void OnDoctorPhoneChanged();
    partial void OnDoctorDepartmentNameChanging(string value);
    partial void OnDoctorDepartmentNameChanged();
    partial void OnDoctorGenderChanging(string value);
    partial void OnDoctorGenderChanged();
    partial void OnDoctorAgeChanging(string value);
    partial void OnDoctorAgeChanged();
    partial void OnDoctorSalaryChanging(string value);
    partial void OnDoctorSalaryChanged();
    partial void OnDoctorProfileChanging(string value);
    partial void OnDoctorProfileChanged();
    partial void OnDoctorUsernameChanging(string value);
    partial void OnDoctorUsernameChanged();
    #endregion
		
		public Doctor_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DoctorId
		{
			get
			{
				return this._DoctorId;
			}
			set
			{
				if ((this._DoctorId != value))
				{
					this.OnDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._DoctorId = value;
					this.SendPropertyChanged("DoctorId");
					this.OnDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorEmail
		{
			get
			{
				return this._DoctorEmail;
			}
			set
			{
				if ((this._DoctorEmail != value))
				{
					this.OnDoctorEmailChanging(value);
					this.SendPropertyChanging();
					this._DoctorEmail = value;
					this.SendPropertyChanged("DoctorEmail");
					this.OnDoctorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DoctorAddress
		{
			get
			{
				return this._DoctorAddress;
			}
			set
			{
				if ((this._DoctorAddress != value))
				{
					this.OnDoctorAddressChanging(value);
					this.SendPropertyChanging();
					this._DoctorAddress = value;
					this.SendPropertyChanged("DoctorAddress");
					this.OnDoctorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorPhone
		{
			get
			{
				return this._DoctorPhone;
			}
			set
			{
				if ((this._DoctorPhone != value))
				{
					this.OnDoctorPhoneChanging(value);
					this.SendPropertyChanging();
					this._DoctorPhone = value;
					this.SendPropertyChanged("DoctorPhone");
					this.OnDoctorPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorDepartmentName
		{
			get
			{
				return this._DoctorDepartmentName;
			}
			set
			{
				if ((this._DoctorDepartmentName != value))
				{
					this.OnDoctorDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorDepartmentName = value;
					this.SendPropertyChanged("DoctorDepartmentName");
					this.OnDoctorDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorGender
		{
			get
			{
				return this._DoctorGender;
			}
			set
			{
				if ((this._DoctorGender != value))
				{
					this.OnDoctorGenderChanging(value);
					this.SendPropertyChanging();
					this._DoctorGender = value;
					this.SendPropertyChanged("DoctorGender");
					this.OnDoctorGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorAge", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorAge
		{
			get
			{
				return this._DoctorAge;
			}
			set
			{
				if ((this._DoctorAge != value))
				{
					this.OnDoctorAgeChanging(value);
					this.SendPropertyChanging();
					this._DoctorAge = value;
					this.SendPropertyChanged("DoctorAge");
					this.OnDoctorAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorSalary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorSalary
		{
			get
			{
				return this._DoctorSalary;
			}
			set
			{
				if ((this._DoctorSalary != value))
				{
					this.OnDoctorSalaryChanging(value);
					this.SendPropertyChanging();
					this._DoctorSalary = value;
					this.SendPropertyChanged("DoctorSalary");
					this.OnDoctorSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorProfile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorProfile
		{
			get
			{
				return this._DoctorProfile;
			}
			set
			{
				if ((this._DoctorProfile != value))
				{
					this.OnDoctorProfileChanging(value);
					this.SendPropertyChanging();
					this._DoctorProfile = value;
					this.SendPropertyChanged("DoctorProfile");
					this.OnDoctorProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorUsername
		{
			get
			{
				return this._DoctorUsername;
			}
			set
			{
				if ((this._DoctorUsername != value))
				{
					this.OnDoctorUsernameChanging(value);
					this.SendPropertyChanging();
					this._DoctorUsername = value;
					this.SendPropertyChanged("DoctorUsername");
					this.OnDoctorUsernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _EmployeeName;
		
		private string _EmployeeAddress;
		
		private string _EmployeePhone;
		
		private string _EmployeeProfile;
		
		private string _EmployeeSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnEmployeeAddressChanging(string value);
    partial void OnEmployeeAddressChanged();
    partial void OnEmployeePhoneChanging(string value);
    partial void OnEmployeePhoneChanged();
    partial void OnEmployeeProfileChanging(string value);
    partial void OnEmployeeProfileChanged();
    partial void OnEmployeeSalaryChanging(string value);
    partial void OnEmployeeSalaryChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmployeeAddress
		{
			get
			{
				return this._EmployeeAddress;
			}
			set
			{
				if ((this._EmployeeAddress != value))
				{
					this.OnEmployeeAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAddress = value;
					this.SendPropertyChanged("EmployeeAddress");
					this.OnEmployeeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeePhone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string EmployeePhone
		{
			get
			{
				return this._EmployeePhone;
			}
			set
			{
				if ((this._EmployeePhone != value))
				{
					this.OnEmployeePhoneChanging(value);
					this.SendPropertyChanging();
					this._EmployeePhone = value;
					this.SendPropertyChanged("EmployeePhone");
					this.OnEmployeePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeProfile", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeProfile
		{
			get
			{
				return this._EmployeeProfile;
			}
			set
			{
				if ((this._EmployeeProfile != value))
				{
					this.OnEmployeeProfileChanging(value);
					this.SendPropertyChanging();
					this._EmployeeProfile = value;
					this.SendPropertyChanged("EmployeeProfile");
					this.OnEmployeeProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSalary", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeSalary
		{
			get
			{
				return this._EmployeeSalary;
			}
			set
			{
				if ((this._EmployeeSalary != value))
				{
					this.OnEmployeeSalaryChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSalary = value;
					this.SendPropertyChanged("EmployeeSalary");
					this.OnEmployeeSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginUserName;
		
		private string _LoginPassword;
		
		private string _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginUserNameChanging(string value);
    partial void OnLoginUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnProfileChanging(string value);
    partial void OnProfileChanged();
    #endregion
		
		public Login_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginUserName
		{
			get
			{
				return this._LoginUserName;
			}
			set
			{
				if ((this._LoginUserName != value))
				{
					this.OnLoginUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoginUserName = value;
					this.SendPropertyChanged("LoginUserName");
					this.OnLoginUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Profile
		{
			get
			{
				return this._Profile;
			}
			set
			{
				if ((this._Profile != value))
				{
					this.OnProfileChanging(value);
					this.SendPropertyChanging();
					this._Profile = value;
					this.SendPropertyChanged("Profile");
					this.OnProfileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientId;
		
		private string _PatientName;
		
		private string _PatientAddress;
		
		private string _PatientPhone;
		
		private string _PatientGender;
		
		private string _PatientAge;
		
		private string _PatientBloodGroup;
		
		private string _PatientRoomNo;
		
		private string _PatientDateOfBirth;
		
		private string _PatientDateOfAdmission;
		
		private string _PatientDateOfRelease;
		
		private string _PatientDoctorName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnPatientAddressChanging(string value);
    partial void OnPatientAddressChanged();
    partial void OnPatientPhoneChanging(string value);
    partial void OnPatientPhoneChanged();
    partial void OnPatientGenderChanging(string value);
    partial void OnPatientGenderChanged();
    partial void OnPatientAgeChanging(string value);
    partial void OnPatientAgeChanged();
    partial void OnPatientBloodGroupChanging(string value);
    partial void OnPatientBloodGroupChanged();
    partial void OnPatientRoomNoChanging(string value);
    partial void OnPatientRoomNoChanged();
    partial void OnPatientDateOfBirthChanging(string value);
    partial void OnPatientDateOfBirthChanged();
    partial void OnPatientDateOfAdmissionChanging(string value);
    partial void OnPatientDateOfAdmissionChanged();
    partial void OnPatientDateOfReleaseChanging(string value);
    partial void OnPatientDateOfReleaseChanged();
    partial void OnPatientDoctorNameChanging(string value);
    partial void OnPatientDoctorNameChanged();
    #endregion
		
		public Patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PatientAddress
		{
			get
			{
				return this._PatientAddress;
			}
			set
			{
				if ((this._PatientAddress != value))
				{
					this.OnPatientAddressChanging(value);
					this.SendPropertyChanging();
					this._PatientAddress = value;
					this.SendPropertyChanged("PatientAddress");
					this.OnPatientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPhone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string PatientPhone
		{
			get
			{
				return this._PatientPhone;
			}
			set
			{
				if ((this._PatientPhone != value))
				{
					this.OnPatientPhoneChanging(value);
					this.SendPropertyChanging();
					this._PatientPhone = value;
					this.SendPropertyChanged("PatientPhone");
					this.OnPatientPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientGender", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PatientGender
		{
			get
			{
				return this._PatientGender;
			}
			set
			{
				if ((this._PatientGender != value))
				{
					this.OnPatientGenderChanging(value);
					this.SendPropertyChanging();
					this._PatientGender = value;
					this.SendPropertyChanged("PatientGender");
					this.OnPatientGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAge", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string PatientAge
		{
			get
			{
				return this._PatientAge;
			}
			set
			{
				if ((this._PatientAge != value))
				{
					this.OnPatientAgeChanging(value);
					this.SendPropertyChanging();
					this._PatientAge = value;
					this.SendPropertyChanged("PatientAge");
					this.OnPatientAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientBloodGroup", DbType="VarChar(4)")]
		public string PatientBloodGroup
		{
			get
			{
				return this._PatientBloodGroup;
			}
			set
			{
				if ((this._PatientBloodGroup != value))
				{
					this.OnPatientBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._PatientBloodGroup = value;
					this.SendPropertyChanged("PatientBloodGroup");
					this.OnPatientBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientRoomNo", DbType="VarChar(50)")]
		public string PatientRoomNo
		{
			get
			{
				return this._PatientRoomNo;
			}
			set
			{
				if ((this._PatientRoomNo != value))
				{
					this.OnPatientRoomNoChanging(value);
					this.SendPropertyChanging();
					this._PatientRoomNo = value;
					this.SendPropertyChanged("PatientRoomNo");
					this.OnPatientRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfBirth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDateOfBirth
		{
			get
			{
				return this._PatientDateOfBirth;
			}
			set
			{
				if ((this._PatientDateOfBirth != value))
				{
					this.OnPatientDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfBirth = value;
					this.SendPropertyChanged("PatientDateOfBirth");
					this.OnPatientDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfAdmission", DbType="VarChar(50)")]
		public string PatientDateOfAdmission
		{
			get
			{
				return this._PatientDateOfAdmission;
			}
			set
			{
				if ((this._PatientDateOfAdmission != value))
				{
					this.OnPatientDateOfAdmissionChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfAdmission = value;
					this.SendPropertyChanged("PatientDateOfAdmission");
					this.OnPatientDateOfAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfRelease", DbType="VarChar(50)")]
		public string PatientDateOfRelease
		{
			get
			{
				return this._PatientDateOfRelease;
			}
			set
			{
				if ((this._PatientDateOfRelease != value))
				{
					this.OnPatientDateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfRelease = value;
					this.SendPropertyChanged("PatientDateOfRelease");
					this.OnPatientDateOfReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientDoctorName
		{
			get
			{
				return this._PatientDoctorName;
			}
			set
			{
				if ((this._PatientDoctorName != value))
				{
					this.OnPatientDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._PatientDoctorName = value;
					this.SendPropertyChanged("PatientDoctorName");
					this.OnPatientDoctorNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receptionist")]
	public partial class Receptionist_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceptionistId;
		
		private string _ReceptionistName;
		
		private string _ReceptionistAddress;
		
		private string _ReceptionistPhone;
		
		private string _ReceptionistSalary;
		
		private string _ReceptionistProfile;
		
		private string _ReceptionistUsername;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceptionistIdChanging(int value);
    partial void OnReceptionistIdChanged();
    partial void OnReceptionistNameChanging(string value);
    partial void OnReceptionistNameChanged();
    partial void OnReceptionistAddressChanging(string value);
    partial void OnReceptionistAddressChanged();
    partial void OnReceptionistPhoneChanging(string value);
    partial void OnReceptionistPhoneChanged();
    partial void OnReceptionistSalaryChanging(string value);
    partial void OnReceptionistSalaryChanged();
    partial void OnReceptionistProfileChanging(string value);
    partial void OnReceptionistProfileChanged();
    partial void OnReceptionistUsernameChanging(string value);
    partial void OnReceptionistUsernameChanged();
    #endregion
		
		public Receptionist_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceptionistId
		{
			get
			{
				return this._ReceptionistId;
			}
			set
			{
				if ((this._ReceptionistId != value))
				{
					this.OnReceptionistIdChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistId = value;
					this.SendPropertyChanged("ReceptionistId");
					this.OnReceptionistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistName
		{
			get
			{
				return this._ReceptionistName;
			}
			set
			{
				if ((this._ReceptionistName != value))
				{
					this.OnReceptionistNameChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistName = value;
					this.SendPropertyChanged("ReceptionistName");
					this.OnReceptionistNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ReceptionistAddress
		{
			get
			{
				return this._ReceptionistAddress;
			}
			set
			{
				if ((this._ReceptionistAddress != value))
				{
					this.OnReceptionistAddressChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistAddress = value;
					this.SendPropertyChanged("ReceptionistAddress");
					this.OnReceptionistAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistPhone
		{
			get
			{
				return this._ReceptionistPhone;
			}
			set
			{
				if ((this._ReceptionistPhone != value))
				{
					this.OnReceptionistPhoneChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistPhone = value;
					this.SendPropertyChanged("ReceptionistPhone");
					this.OnReceptionistPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistSalary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistSalary
		{
			get
			{
				return this._ReceptionistSalary;
			}
			set
			{
				if ((this._ReceptionistSalary != value))
				{
					this.OnReceptionistSalaryChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistSalary = value;
					this.SendPropertyChanged("ReceptionistSalary");
					this.OnReceptionistSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistProfile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistProfile
		{
			get
			{
				return this._ReceptionistProfile;
			}
			set
			{
				if ((this._ReceptionistProfile != value))
				{
					this.OnReceptionistProfileChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistProfile = value;
					this.SendPropertyChanged("ReceptionistProfile");
					this.OnReceptionistProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceptionistUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceptionistUsername
		{
			get
			{
				return this._ReceptionistUsername;
			}
			set
			{
				if ((this._ReceptionistUsername != value))
				{
					this.OnReceptionistUsernameChanging(value);
					this.SendPropertyChanging();
					this._ReceptionistUsername = value;
					this.SendPropertyChanged("ReceptionistUsername");
					this.OnReceptionistUsernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoomNo;
		
		private string _RoomDateOfAdmission;
		
		private string _RoomDateOfRelease;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    partial void OnRoomDateOfAdmissionChanging(string value);
    partial void OnRoomDateOfAdmissionChanged();
    partial void OnRoomDateOfReleaseChanging(string value);
    partial void OnRoomDateOfReleaseChanged();
    #endregion
		
		public Room()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomDateOfAdmission", DbType="VarChar(50)")]
		public string RoomDateOfAdmission
		{
			get
			{
				return this._RoomDateOfAdmission;
			}
			set
			{
				if ((this._RoomDateOfAdmission != value))
				{
					this.OnRoomDateOfAdmissionChanging(value);
					this.SendPropertyChanging();
					this._RoomDateOfAdmission = value;
					this.SendPropertyChanged("RoomDateOfAdmission");
					this.OnRoomDateOfAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomDateOfRelease", DbType="VarChar(50)")]
		public string RoomDateOfRelease
		{
			get
			{
				return this._RoomDateOfRelease;
			}
			set
			{
				if ((this._RoomDateOfRelease != value))
				{
					this.OnRoomDateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._RoomDateOfRelease = value;
					this.SendPropertyChanged("RoomDateOfRelease");
					this.OnRoomDateOfReleaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Grade;
		
		private string _Name;
		
		private string _Profile;
		
		private string _Salary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradeChanging(int value);
    partial void OnGradeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProfileChanging(string value);
    partial void OnProfileChanged();
    partial void OnSalaryChanging(string value);
    partial void OnSalaryChanged();
    #endregion
		
		public Salary_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Profile
		{
			get
			{
				return this._Profile;
			}
			set
			{
				if ((this._Profile != value))
				{
					this.OnProfileChanging(value);
					this.SendPropertyChanging();
					this._Profile = value;
					this.SendPropertyChanged("Profile");
					this.OnProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private string _InvoiceDate;
		
		private string _InvoicePatientName;
		
		private string _InvoiceDoctorName;
		
		private string _InvoiceRoomNo;
		
		private string _InvoiceDateOfAdmission;
		
		private string _InvoiceDateOfRelease;
		
		private string _InvoiceAdmissionCharge;
		
		private string _InvoiceServiceCharge;
		
		private string _InvoiceDoctorFees;
		
		private string _InvoiceRoomChargePerDay;
		
		private string _InvoiceRoomNoOfDays;
		
		private string _InvoiceDiscount;
		
		private string _InvoiceVat;
		
		private string _InvoiceTotalBill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceDateChanging(string value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoicePatientNameChanging(string value);
    partial void OnInvoicePatientNameChanged();
    partial void OnInvoiceDoctorNameChanging(string value);
    partial void OnInvoiceDoctorNameChanged();
    partial void OnInvoiceRoomNoChanging(string value);
    partial void OnInvoiceRoomNoChanged();
    partial void OnInvoiceDateOfAdmissionChanging(string value);
    partial void OnInvoiceDateOfAdmissionChanged();
    partial void OnInvoiceDateOfReleaseChanging(string value);
    partial void OnInvoiceDateOfReleaseChanged();
    partial void OnInvoiceAdmissionChargeChanging(string value);
    partial void OnInvoiceAdmissionChargeChanged();
    partial void OnInvoiceServiceChargeChanging(string value);
    partial void OnInvoiceServiceChargeChanged();
    partial void OnInvoiceDoctorFeesChanging(string value);
    partial void OnInvoiceDoctorFeesChanged();
    partial void OnInvoiceRoomChargePerDayChanging(string value);
    partial void OnInvoiceRoomChargePerDayChanged();
    partial void OnInvoiceRoomNoOfDaysChanging(string value);
    partial void OnInvoiceRoomNoOfDaysChanged();
    partial void OnInvoiceDiscountChanging(string value);
    partial void OnInvoiceDiscountChanged();
    partial void OnInvoiceVatChanging(string value);
    partial void OnInvoiceVatChanged();
    partial void OnInvoiceTotalBillChanging(string value);
    partial void OnInvoiceTotalBillChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePatientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoicePatientName
		{
			get
			{
				return this._InvoicePatientName;
			}
			set
			{
				if ((this._InvoicePatientName != value))
				{
					this.OnInvoicePatientNameChanging(value);
					this.SendPropertyChanging();
					this._InvoicePatientName = value;
					this.SendPropertyChanged("InvoicePatientName");
					this.OnInvoicePatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceDoctorName
		{
			get
			{
				return this._InvoiceDoctorName;
			}
			set
			{
				if ((this._InvoiceDoctorName != value))
				{
					this.OnInvoiceDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDoctorName = value;
					this.SendPropertyChanged("InvoiceDoctorName");
					this.OnInvoiceDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRoomNo", DbType="VarChar(50)")]
		public string InvoiceRoomNo
		{
			get
			{
				return this._InvoiceRoomNo;
			}
			set
			{
				if ((this._InvoiceRoomNo != value))
				{
					this.OnInvoiceRoomNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRoomNo = value;
					this.SendPropertyChanged("InvoiceRoomNo");
					this.OnInvoiceRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateOfAdmission", DbType="VarChar(50)")]
		public string InvoiceDateOfAdmission
		{
			get
			{
				return this._InvoiceDateOfAdmission;
			}
			set
			{
				if ((this._InvoiceDateOfAdmission != value))
				{
					this.OnInvoiceDateOfAdmissionChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDateOfAdmission = value;
					this.SendPropertyChanged("InvoiceDateOfAdmission");
					this.OnInvoiceDateOfAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDateOfRelease", DbType="VarChar(50)")]
		public string InvoiceDateOfRelease
		{
			get
			{
				return this._InvoiceDateOfRelease;
			}
			set
			{
				if ((this._InvoiceDateOfRelease != value))
				{
					this.OnInvoiceDateOfReleaseChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDateOfRelease = value;
					this.SendPropertyChanged("InvoiceDateOfRelease");
					this.OnInvoiceDateOfReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAdmissionCharge", DbType="VarChar(50)")]
		public string InvoiceAdmissionCharge
		{
			get
			{
				return this._InvoiceAdmissionCharge;
			}
			set
			{
				if ((this._InvoiceAdmissionCharge != value))
				{
					this.OnInvoiceAdmissionChargeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAdmissionCharge = value;
					this.SendPropertyChanged("InvoiceAdmissionCharge");
					this.OnInvoiceAdmissionChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceServiceCharge", DbType="VarChar(50)")]
		public string InvoiceServiceCharge
		{
			get
			{
				return this._InvoiceServiceCharge;
			}
			set
			{
				if ((this._InvoiceServiceCharge != value))
				{
					this.OnInvoiceServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceServiceCharge = value;
					this.SendPropertyChanged("InvoiceServiceCharge");
					this.OnInvoiceServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDoctorFees", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceDoctorFees
		{
			get
			{
				return this._InvoiceDoctorFees;
			}
			set
			{
				if ((this._InvoiceDoctorFees != value))
				{
					this.OnInvoiceDoctorFeesChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDoctorFees = value;
					this.SendPropertyChanged("InvoiceDoctorFees");
					this.OnInvoiceDoctorFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRoomChargePerDay", DbType="VarChar(50)")]
		public string InvoiceRoomChargePerDay
		{
			get
			{
				return this._InvoiceRoomChargePerDay;
			}
			set
			{
				if ((this._InvoiceRoomChargePerDay != value))
				{
					this.OnInvoiceRoomChargePerDayChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRoomChargePerDay = value;
					this.SendPropertyChanged("InvoiceRoomChargePerDay");
					this.OnInvoiceRoomChargePerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRoomNoOfDays", DbType="VarChar(50)")]
		public string InvoiceRoomNoOfDays
		{
			get
			{
				return this._InvoiceRoomNoOfDays;
			}
			set
			{
				if ((this._InvoiceRoomNoOfDays != value))
				{
					this.OnInvoiceRoomNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRoomNoOfDays = value;
					this.SendPropertyChanged("InvoiceRoomNoOfDays");
					this.OnInvoiceRoomNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDiscount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceDiscount
		{
			get
			{
				return this._InvoiceDiscount;
			}
			set
			{
				if ((this._InvoiceDiscount != value))
				{
					this.OnInvoiceDiscountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDiscount = value;
					this.SendPropertyChanged("InvoiceDiscount");
					this.OnInvoiceDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceVat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceVat
		{
			get
			{
				return this._InvoiceVat;
			}
			set
			{
				if ((this._InvoiceVat != value))
				{
					this.OnInvoiceVatChanging(value);
					this.SendPropertyChanging();
					this._InvoiceVat = value;
					this.SendPropertyChanged("InvoiceVat");
					this.OnInvoiceVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTotalBill", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceTotalBill
		{
			get
			{
				return this._InvoiceTotalBill;
			}
			set
			{
				if ((this._InvoiceTotalBill != value))
				{
					this.OnInvoiceTotalBillChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTotalBill = value;
					this.SendPropertyChanged("InvoiceTotalBill");
					this.OnInvoiceTotalBillChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
